version: 2.1

jobs:
  working_directory: /tmp
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:17.0.1
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn -B -DskipTests clean package > /tmp/art-1
      # Then run your tests!
      - run:
          name: Test
          command: mvn test
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: Generate-Image
          command: docker build . -t lucasalbertoni/countries
      - run:
          name: Login-Dockerhub
          command: echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
      - run:
          name: Push-Dockerhub
          command: docker push lucasalbertoni/countries
      - run:
          name: Remove-File
          command: rm /home/circleci/.docker/config.json
      - run:
          name: Show
          command: cat /home/circleci/.docker/config.json

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  execute-process: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
